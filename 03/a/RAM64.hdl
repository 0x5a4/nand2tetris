// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    RAM8(in=in, out=out0, load=load0, address=address[0..2]);
    RAM8(in=in, out=out1, load=load1, address=address[0..2]);
    RAM8(in=in, out=out2, load=load2, address=address[0..2]);
    RAM8(in=in, out=out3, load=load3, address=address[0..2]);
    RAM8(in=in, out=out4, load=load4, address=address[0..2]);
    RAM8(in=in, out=out6, load=load6, address=address[0..2]);
    RAM8(in=in, out=out5, load=load5, address=address[0..2]);
    RAM8(in=in, out=out7, load=load7, address=address[0..2]);
    DMux8Way(in=load, sel=address[3..5], a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[3..5], out=out);
}
